{
  "root": true,
  "env": {
    "browser": true,
    "node": true,
    "es2020": true
  },
  "parser": "@typescript-eslint/parser",
  "overrides": [{
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "prettier"
      ],
      "plugins": [
        "eslint-plugin-import",
        "@angular-eslint/eslint-plugin",
        "@angular-eslint/eslint-plugin-template",
        "eslint-plugin-prefer-arrow",
        "@typescript-eslint",
        "@typescript-eslint/tslint"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/use-injectable-provided-in": "error",
        "@angular-eslint/no-attribute-decorator": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/contextual-decorator": "error",
        "@angular-eslint/no-pipe-impure": "warn",
        "@angular-eslint/prefer-on-push-component-change-detection": "warn",
        "@angular-eslint/use-lifecycle-interface": "warn",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/component-class-suffix": "warn",
        "@angular-eslint/directive-class-suffix": "warn",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/no-forward-ref": "warn",
        "@angular-eslint/prefer-output-readonly": "warn",
        "@typescript-eslint/indent": [
          "error",
          2,
          {
            "SwitchCase": 1,
            "CallExpression": {
              "arguments": "first"
            },
            "FunctionExpression": {
              "parameters": "first"
            },
            "FunctionDeclaration": {
              "parameters": "first"
            }
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": [
              "typeLike"
            ],
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "enumMember",
            "format": [
              "UPPER_CASE"
            ]
          }
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "path": "always",
            "types": "prefer-import",
            "lib": "always"
          }
        ],
        "@typescript-eslint/no-explicit-any": 0,
        "@typescript-eslint/no-unsafe-call": 0,
        "@typescript-eslint/no-unsafe-member-access": 0,
        "@typescript-eslint/no-unsafe-assignment": 0,
        "@typescript-eslint/no-floating-promises": 0,
        "@typescript-eslint/adjacent-overload-signatures": 0,
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/strict-boolean-expressions": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/keyword-spacing": "error",
        "@typescript-eslint/space-infix-ops": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": ["error", "single"],
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/unified-signatures": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "asyncArrow": "always",
            "named": "never"
          }
        ],
        "spaced-comment": [
          "error",
          "always",
          {
            "markers": [
              "/"
            ]
          }
        ],
        "keyword-spacing": "off",
        "space-infix-ops": "off",
        "arrow-body-style": "error",
        "complexity": "off",
        "constructor-super": "error",
        "curly": "error",
        "dot-notation": "error",
        "eol-last": "error",
        "eqeqeq": ["error", "smart"],
        "guard-for-in": "error",
        "id-match": "error",
        "import/no-deprecated": "warn",
        "max-classes-per-file": "off",
        "max-len": ["warn", { "code": 200 }],
        "new-parens": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-invalid-this": "off",
        "no-new-wrappers": "error",
        "no-restricted-imports": ["error", "rxjs/Rx"],
        "no-shadow": "off",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unsafe-finally": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-use-before-define": "off",
        "no-var": "error",
        "object-shorthand": "error",
        "indent": ["error", 2, {"SwitchCase": 1}],
        "one-var": ["error", "never"],
        "prefer-arrow/prefer-arrow-functions": "off",
        "prefer-const": "error",
        "quote-props": ["error", "as-needed"],
        "quotes": "off",
        "radix": "error",
        "use-isnan": "error",
        "valid-typeof": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/banana-in-box": "error",
        "@angular-eslint/template/eqeqeq": "error",
        "@angular-eslint/template/no-negated-async": "error"
      }
    }
  ]
}
